@page
@model Internal_Support.Pages.SupportTicket.EditModel

@{
    ViewData["Title"] = "Edit";
}

<h4>SupportTickets</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="SupportTickets.Id" />
            <div class="form-group">
                <label asp-for="SupportTickets.YourMail" class="control-label"></label>
                <input asp-for="SupportTickets.YourMail" class="form-control" />
                <span asp-validation-for="SupportTickets.YourMail" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="SupportTickets.Subject" class="control-label"></label>
                <input asp-for="SupportTickets.Subject" class="form-control" />
                <span asp-validation-for="SupportTickets.Subject" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="SupportTickets.Description" class="control-label"></label>
                <input asp-for="SupportTickets.Description" class="form-control" />
                <span asp-validation-for="SupportTickets.Description" class="text-danger"></span>
            </div>


            <div class="form-group">
                <label asp-for="SupportTickets.CreatedDate" class="control-label"></label>
                <input asp-for="SupportTickets.CreatedDate" class="form-control" readonly />

            </div>
            <div class="form-group">
                @if (Model.SupportTickets.UpdatedDate == null)

                {
                    @Html.Display(null)}
                else
                {
                    <label asp-for="SupportTickets.UpdatedDate" class="control-label"></label>
                    <input asp-for="SupportTickets.UpdatedDate" class="form-control" readonly />
                }
            </div>

            <div class="form-group">
                <label asp-for="SupportTickets.pathFile" class="form-control-file"></label>

                <a href="downloadAttachment()" download="">@Html.DisplayFor(model => model.SupportTickets.pathFile)</a>

            </div>

            <div class="form-group">
                <label class="control-label">Status</label><br />
                @Html.DropDownList("StatusData", (IEnumerable<SelectListItem>)ViewData["StatusList"], new { @class = "btn btn-default dropdown-toggle" })

            </div>
            <div class="form-group">
                <label class="control-label">Assigned</label><br />
                @Html.DropDownList("AssignedData", (IEnumerable<SelectListItem>)ViewData["AssignedList"], new { @class = "btn btn-default dropdown-toggle" })
            </div>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="./Index">Back to List</a>
</div>

<script>
    function downloadAttachment() {
        var fileName = "@Html.Raw(Model.SupportTickets.pathFile)";
        fileName.substring(1, fileName.length - 1);
        var downloadAttachmentUrl='/files/fileName'
        window.location.href = downloadAttachmentUrl;
    }
</script>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
